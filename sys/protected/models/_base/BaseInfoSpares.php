<?php

/**
 * This is the model base class for the table "info_spares".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InfoSpares".
 *
 * Columns in table "info_spares" available as properties of the model,
 * followed by relations of table "info_spares" available as properties of the model.
 *
 * @property integer $id
 * @property string $type_spares
 * @property string $spare_code
 * @property string $spare_name
 * @property integer $spare_price_buy
 * @property integer $spare_price_sale
 * @property string $date_in
 * @property string $date_out
 * @property integer $spare_position_id
 * @property integer $branch_id
 * @property integer $car_or_spare_status_id
 * @property integer $user_id
 * @property integer $branch_from_share
 * @property integer $qautity
 * @property string $status
 * @property string $number_come
 *
 * @property SparesPosition $sparePosition
 * @property Branch $branch
 * @property Branch $branchFromShare
 * @property CarOrSpareStatus $carOrSpareStatus
 * @property User $user
 * @property SaleSpares[] $saleSpares
 */
abstract class BaseInfoSpares extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'info_spares';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InfoSpares|InfoSpares', $n);
	}

	public static function representingColumn() {
		return 'type_spares';
	}

	public function rules() {
		return array(
			array('type_spares, spare_code, spare_name, spare_price_buy, spare_price_sale, date_in, spare_position_id, branch_id, car_or_spare_status_id, user_id, qautity, number_come', 'required'),
			array('spare_price_buy, spare_price_sale, spare_position_id, branch_id, car_or_spare_status_id, user_id, branch_from_share, qautity', 'numerical', 'integerOnly'=>true),
			array('type_spares, spare_name', 'length', 'max'=>255),
			array('spare_code, number_come', 'length', 'max'=>45),
			array('status', 'length', 'max'=>7),
			array('date_out', 'safe'),
			array('date_out, branch_from_share, status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, type_spares, spare_code, spare_name, spare_price_buy, spare_price_sale, date_in, date_out, spare_position_id, branch_id, car_or_spare_status_id, user_id, branch_from_share, qautity, status, number_come', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'sparePosition' => array(self::BELONGS_TO, 'SparesPosition', 'spare_position_id'),
			'branch' => array(self::BELONGS_TO, 'Branch', 'branch_id'),
			'branchFromShare' => array(self::BELONGS_TO, 'Branch', 'branch_from_share'),
			'carOrSpareStatus' => array(self::BELONGS_TO, 'CarOrSpareStatus', 'car_or_spare_status_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'saleSpares' => array(self::HAS_MANY, 'SaleSpares', 'info_spares_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'type_spares' => Yii::t('app', 'Type Spares'),
			'spare_code' => Yii::t('app', 'Spare Code'),
			'spare_name' => Yii::t('app', 'Spare Name'),
			'spare_price_buy' => Yii::t('app', 'Spare Price Buy'),
			'spare_price_sale' => Yii::t('app', 'Spare Price Sale'),
			'date_in' => Yii::t('app', 'Date In'),
			'date_out' => Yii::t('app', 'Date Out'),
			'spare_position_id' => null,
			'branch_id' => null,
			'car_or_spare_status_id' => null,
			'user_id' => null,
			'branch_from_share' => null,
			'qautity' => Yii::t('app', 'Qautity'),
			'status' => Yii::t('app', 'Status'),
			'number_come' => Yii::t('app', 'Number Come'),
			'sparePosition' => null,
			'branch' => null,
			'branchFromShare' => null,
			'carOrSpareStatus' => null,
			'user' => null,
			'saleSpares' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('type_spares', $this->type_spares, true);
		$criteria->compare('spare_code', $this->spare_code, true);
		$criteria->compare('spare_name', $this->spare_name, true);
		$criteria->compare('spare_price_buy', $this->spare_price_buy);
		$criteria->compare('spare_price_sale', $this->spare_price_sale);
		$criteria->compare('date_in', $this->date_in, true);
		$criteria->compare('date_out', $this->date_out, true);
		$criteria->compare('spare_position_id', $this->spare_position_id);
		$criteria->compare('branch_id', $this->branch_id);
		$criteria->compare('car_or_spare_status_id', $this->car_or_spare_status_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('branch_from_share', $this->branch_from_share);
		$criteria->compare('qautity', $this->qautity);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('number_come', $this->number_come, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}