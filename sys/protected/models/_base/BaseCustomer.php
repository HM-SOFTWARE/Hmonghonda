<?php

/**
 * This is the model base class for the table "customer".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Customer".
 *
 * Columns in table "customer" available as properties of the model,
 * followed by relations of table "customer" available as properties of the model.
 *
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property string $address
 * @property string $phone_1
 * @property string $phone_2
 * @property integer $district_id
 * @property string $date
 * @property integer $province_id
 * @property integer $age
 * @property string $occupation
 *
 * @property CarSale[] $carSales
 * @property District $district
 * @property Province $province
 * @property Placard[] $placards
 * @property SaleSpares[] $saleSpares
 */
abstract class BaseCustomer extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'customer';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Customer|Customers', $n);
	}

	public static function representingColumn() {
		return 'first_name';
	}

	public function rules() {
		return array(
			array('first_name, address, phone_1, district_id, date, province_id', 'required'),
			array('district_id, province_id, age', 'numerical', 'integerOnly'=>true),
			array('first_name, last_name', 'length', 'max'=>255),
			array('phone_1, phone_2', 'length', 'max'=>45),
			array('occupation', 'safe'),
			array('last_name, phone_2, age, occupation', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, first_name, last_name, address, phone_1, phone_2, district_id, date, province_id, age, occupation', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'carSales' => array(self::HAS_MANY, 'CarSale', 'customer_id'),
			'district' => array(self::BELONGS_TO, 'District', 'district_id'),
			'province' => array(self::BELONGS_TO, 'Province', 'province_id'),
			'placards' => array(self::HAS_MANY, 'Placard', 'customer_id'),
			'saleSpares' => array(self::HAS_MANY, 'SaleSpares', 'customer_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'first_name' => Yii::t('app', 'First Name'),
			'last_name' => Yii::t('app', 'Last Name'),
			'address' => Yii::t('app', 'Address'),
			'phone_1' => Yii::t('app', 'Phone 1'),
			'phone_2' => Yii::t('app', 'Phone 2'),
			'district_id' => null,
			'date' => Yii::t('app', 'Date'),
			'province_id' => null,
			'age' => Yii::t('app', 'Age'),
			'occupation' => Yii::t('app', 'Occupation'),
			'carSales' => null,
			'district' => null,
			'province' => null,
			'placards' => null,
			'saleSpares' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('first_name', $this->first_name, true);
		$criteria->compare('last_name', $this->last_name, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('phone_1', $this->phone_1, true);
		$criteria->compare('phone_2', $this->phone_2, true);
		$criteria->compare('district_id', $this->district_id);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('province_id', $this->province_id);
		$criteria->compare('age', $this->age);
		$criteria->compare('occupation', $this->occupation, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}