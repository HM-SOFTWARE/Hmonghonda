<?php

/**
 * This is the model base class for the table "branch".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Branch".
 *
 * Columns in table "branch" available as properties of the model,
 * followed by relations of table "branch" available as properties of the model.
 *
 * @property integer $id
 * @property string $branch_name
 * @property string $tel
 * @property string $mobile
 * @property string $address
 * @property integer $district_id
 * @property integer $province_id
 *
 * @property District $district
 * @property Province $province
 * @property CarSale[] $carSales
 * @property CarSale[] $carSales1
 * @property InfoSpares[] $infoSpares
 * @property InfoSpares[] $infoSpares1
 * @property InfonCar[] $infonCars
 * @property InfonCar[] $infonCars1
 * @property SaleSpares[] $saleSpares
 * @property SparesPosition[] $sparesPositions
 * @property User[] $users
 */
abstract class BaseBranch extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'branch';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Branch|Branches', $n);
	}

	public static function representingColumn() {
		return 'tel';
	}

	public function rules() {
		return array(
			array('tel, address, district_id, province_id', 'required'),
			array('district_id, province_id', 'numerical', 'integerOnly'=>true),
			array('branch_name', 'length', 'max'=>255),
			array('tel, mobile', 'length', 'max'=>45),
			array('branch_name, mobile', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, branch_name, tel, mobile, address, district_id, province_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'district' => array(self::BELONGS_TO, 'District', 'district_id'),
			'province' => array(self::BELONGS_TO, 'Province', 'province_id'),
			'carSales' => array(self::HAS_MANY, 'CarSale', 'branch_id'),
			'carSales1' => array(self::HAS_MANY, 'CarSale', 'share_to_branch'),
			'infoSpares' => array(self::HAS_MANY, 'InfoSpares', 'branch_id'),
			'infoSpares1' => array(self::HAS_MANY, 'InfoSpares', 'branch_from_share'),
			'infonCars' => array(self::HAS_MANY, 'InfonCar', 'branch_id'),
			'infonCars1' => array(self::HAS_MANY, 'InfonCar', 'branch_from_share'),
			'saleSpares' => array(self::HAS_MANY, 'SaleSpares', 'branch_id'),
			'sparesPositions' => array(self::HAS_MANY, 'SparesPosition', 'branch_id'),
			'users' => array(self::HAS_MANY, 'User', 'branch_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'branch_name' => Yii::t('app', 'Branch Name'),
			'tel' => Yii::t('app', 'Tel'),
			'mobile' => Yii::t('app', 'Mobile'),
			'address' => Yii::t('app', 'Address'),
			'district_id' => null,
			'province_id' => null,
			'district' => null,
			'province' => null,
			'carSales' => null,
			'carSales1' => null,
			'infoSpares' => null,
			'infoSpares1' => null,
			'infonCars' => null,
			'infonCars1' => null,
			'saleSpares' => null,
			'sparesPositions' => null,
			'users' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('branch_name', $this->branch_name, true);
		$criteria->compare('tel', $this->tel, true);
		$criteria->compare('mobile', $this->mobile, true);
		$criteria->compare('address', $this->address, true);
		$criteria->compare('district_id', $this->district_id);
		$criteria->compare('province_id', $this->province_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}