<?php

/**
 * This is the model base class for the table "user".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "User".
 *
 * Columns in table "user" available as properties of the model,
 * followed by relations of table "user" available as properties of the model.
 *
 * @property integer $id
 * @property string $first_name
 * @property string $last_name
 * @property string $email
 * @property string $phone
 * @property string $phone1
 * @property string $username
 * @property string $password
 * @property string $user_type
 * @property integer $branch_id
 * @property string $status
 *
 * @property CarSale[] $carSales
 * @property InfoSpares[] $infoSpares
 * @property InfonCar[] $infonCars
 * @property SaleSpares[] $saleSpares
 * @property Branch $branch
 */
abstract class BaseUser extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'user';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'User|Users', $n);
    }

    public static function representingColumn() {
        return 'first_name';
    }

    public function rules() {
        return array(
            array('first_name, last_name, phone, username, password, user_type', 'required'),
            array('branch_id', 'numerical', 'integerOnly' => true),
            array('first_name, last_name, email, phone, phone1, username, password', 'length', 'max' => 255),
            array('user_type', 'length', 'max' => 5),
            array('status', 'length', 'max' => 1),
            array('email, phone1, branch_id, status', 'default', 'setOnEmpty' => true, 'value' => null),
            array('id, first_name, last_name, email, phone, phone1, username, password, user_type, branch_id, status', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'carSales' => array(self::HAS_MANY, 'CarSale', 'user_id'),
            'infoSpares' => array(self::HAS_MANY, 'InfoSpares', 'user_id'),
            'infonCars' => array(self::HAS_MANY, 'InfonCar', 'user_id'),
            'saleSpares' => array(self::HAS_MANY, 'SaleSpares', 'user_id'),
            'branch' => array(self::BELONGS_TO, 'Branch', 'branch_id'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ລຳ​ດັບ'),
            'first_name' => Yii::t('app', 'First Name'),
            'last_name' => Yii::t('app', 'Last Name'),
            'email' => Yii::t('app', 'Email'),
            'phone' => Yii::t('app', 'Phone'),
            'phone1' => Yii::t('app', 'Phone1'),
            'username' => Yii::t('app', '​ຊື່​ເຂົ້າ​ລະ​ບົບ'),
            'password' => Yii::t('app', 'Password'),
            'user_type' => Yii::t('app', 'ປະ​ເພດ​ເຂົ້າ​ລະ​ບົບ'),
            'branch_id' => 'ສາ​ຂາ',
            'status' => Yii::t('app', 'Status'),
            'carSales' => null,
            'infoSpares' => null,
            'infonCars' => null,
            'saleSpares' => null,
            'branch' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('first_name', $this->first_name, true);
        $criteria->compare('last_name', $this->last_name, true);
        $criteria->compare('email', $this->email, true);
        $criteria->compare('phone', $this->phone, true);
        $criteria->compare('phone1', $this->phone1, true);
        $criteria->compare('username', $this->username, true);
        $criteria->compare('password', $this->password, true);
        $criteria->compare('user_type', $this->user_type, true);
        $criteria->compare('branch_id', $this->branch_id);
        $criteria->compare('status', $this->status, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

}
