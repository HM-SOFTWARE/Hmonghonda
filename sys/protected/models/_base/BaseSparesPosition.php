<?php

/**
 * This is the model base class for the table "spares_position".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SparesPosition".
 *
 * Columns in table "spares_position" available as properties of the model,
 * followed by relations of table "spares_position" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property integer $branch_id
 *
 * @property InfoSpares[] $infoSpares
 * @property Branch $branch
 */
abstract class BaseSparesPosition extends GxActiveRecord {

    public static function model($className = __CLASS__) {
        return parent::model($className);
    }

    public function tableName() {
        return 'spares_position';
    }

    public static function label($n = 1) {
        return Yii::t('app', 'SparesPosition|SparesPositions', $n);
    }

    public static function representingColumn() {
        return 'name';
    }

    public function rules() {
        return array(
            array('name, branch_id', 'required'),
            array('branch_id', 'numerical', 'integerOnly' => true),
            array('name', 'length', 'max' => 45),
            array('id, name, branch_id', 'safe', 'on' => 'search'),
        );
    }

    public function relations() {
        return array(
            'infoSpares' => array(self::HAS_MANY, 'InfoSpares', 'spare_position_id'),
            'branch' => array(self::BELONGS_TO, 'Branch', 'branch_id'),
        );
    }

    public function pivotModels() {
        return array(
        );
    }

    public function attributeLabels() {
        return array(
            'id' => Yii::t('app', 'ID'),
            'name' => Yii::t('app', 'ຊື່​ຕຳ​ແໜງ​ເກັບ​ອາ​ໄຫຼ່'),
            'branch_id' => null,
            'infoSpares' => null,
            'branch' => null,
        );
    }

    public function search() {
        $criteria = new CDbCriteria;
        $criteria->compare('id', $this->id);
        $criteria->compare('name', $this->name, true);
        $criteria->compare('branch_id', $this->branch_id);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

}
