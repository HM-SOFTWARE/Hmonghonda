<?php

/**
 * This is the model base class for the table "infon_car".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "InfonCar".
 *
 * Columns in table "infon_car" available as properties of the model,
 * followed by relations of table "infon_car" available as properties of the model.
 *
 * @property integer $id
 * @property string $car_code_1
 * @property string $car_code_2
 * @property integer $car_price_buy
 * @property integer $car_price_sale
 * @property integer $car_type_id
 * @property string $date_in
 * @property string $date_out
 * @property integer $branch_id
 * @property integer $car_or_spare_status_id
 * @property integer $user_id
 * @property string $generation
 * @property string $brand
 * @property string $color
 * @property integer $branch_from_share
 * @property string $status
 * @property string $date_d
 * @property integer $duc_com
 * @property string $number_com
 *
 * @property CarSale[] $carSales
 * @property DeptsMonthPay[] $deptsMonthPays
 * @property Branch $branch
 * @property Branch $branchFromShare
 * @property CarOrSpareStatus $carOrSpareStatus
 * @property CarType $carType
 * @property User $user
 * @property Placard[] $placards
 */
abstract class BaseInfonCar extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'infon_car';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'InfonCar|InfonCars', $n);
	}

	public static function representingColumn() {
		return 'car_code_1';
	}

	public function rules() {
		return array(
			array('car_code_1, car_code_2, car_price_buy, car_type_id, date_in, branch_id, car_or_spare_status_id, user_id, generation, brand, color, number_com', 'required'),
			array('car_price_buy, car_price_sale, car_type_id, branch_id, car_or_spare_status_id, user_id, branch_from_share, duc_com', 'numerical', 'integerOnly'=>true),
			array('car_code_1, car_code_2, number_com', 'length', 'max'=>45),
			array('generation, brand, color', 'length', 'max'=>255),
			array('status', 'length', 'max'=>7),
			array('date_out, date_d', 'safe'),
			array('car_price_sale, date_out, branch_from_share, status, date_d, duc_com', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, car_code_1, car_code_2, car_price_buy, car_price_sale, car_type_id, date_in, date_out, branch_id, car_or_spare_status_id, user_id, generation, brand, color, branch_from_share, status, date_d, duc_com, number_com', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'carSales' => array(self::HAS_MANY, 'CarSale', 'infon_car_id'),
			'deptsMonthPays' => array(self::HAS_MANY, 'DeptsMonthPay', 'infon_car_id'),
			'branch' => array(self::BELONGS_TO, 'Branch', 'branch_id'),
			'branchFromShare' => array(self::BELONGS_TO, 'Branch', 'branch_from_share'),
			'carOrSpareStatus' => array(self::BELONGS_TO, 'CarOrSpareStatus', 'car_or_spare_status_id'),
			'carType' => array(self::BELONGS_TO, 'CarType', 'car_type_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
			'placards' => array(self::HAS_MANY, 'Placard', 'infon_car_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'car_code_1' => Yii::t('app', 'Car Code 1'),
			'car_code_2' => Yii::t('app', 'Car Code 2'),
			'car_price_buy' => Yii::t('app', 'Car Price Buy'),
			'car_price_sale' => Yii::t('app', 'Car Price Sale'),
			'car_type_id' => null,
			'date_in' => Yii::t('app', 'Date In'),
			'date_out' => Yii::t('app', 'Date Out'),
			'branch_id' => null,
			'car_or_spare_status_id' => null,
			'user_id' => null,
			'generation' => Yii::t('app', 'Generation'),
			'brand' => Yii::t('app', 'Brand'),
			'color' => Yii::t('app', 'Color'),
			'branch_from_share' => null,
			'status' => Yii::t('app', 'Status'),
			'date_d' => Yii::t('app', 'Date D'),
			'duc_com' => Yii::t('app', 'Duc Com'),
			'number_com' => Yii::t('app', 'Number Com'),
			'carSales' => null,
			'deptsMonthPays' => null,
			'branch' => null,
			'branchFromShare' => null,
			'carOrSpareStatus' => null,
			'carType' => null,
			'user' => null,
			'placards' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('car_code_1', $this->car_code_1, true);
		$criteria->compare('car_code_2', $this->car_code_2, true);
		$criteria->compare('car_price_buy', $this->car_price_buy);
		$criteria->compare('car_price_sale', $this->car_price_sale);
		$criteria->compare('car_type_id', $this->car_type_id);
		$criteria->compare('date_in', $this->date_in, true);
		$criteria->compare('date_out', $this->date_out, true);
		$criteria->compare('branch_id', $this->branch_id);
		$criteria->compare('car_or_spare_status_id', $this->car_or_spare_status_id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('generation', $this->generation, true);
		$criteria->compare('brand', $this->brand, true);
		$criteria->compare('color', $this->color, true);
		$criteria->compare('branch_from_share', $this->branch_from_share);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('date_d', $this->date_d, true);
		$criteria->compare('duc_com', $this->duc_com);
		$criteria->compare('number_com', $this->number_com, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}