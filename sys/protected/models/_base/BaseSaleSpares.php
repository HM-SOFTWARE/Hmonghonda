<?php

/**
 * This is the model base class for the table "sale_spares".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SaleSpares".
 *
 * Columns in table "sale_spares" available as properties of the model,
 * followed by relations of table "sale_spares" available as properties of the model.
 *
 * @property integer $id
 * @property integer $paid
 * @property string $date
 * @property integer $customer_id
 * @property integer $info_spares_id
 * @property integer $branch_id
 * @property integer $sale_status_id
 * @property integer $discount
 * @property integer $user_id
 * @property integer $price_buy
 * @property integer $qautity
 *
 * @property Customer $customer
 * @property Branch $branch
 * @property InfoSpares $infoSpares
 * @property SaleStatus $saleStatus
 * @property User $user
 */
abstract class BaseSaleSpares extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'sale_spares';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'SaleSpares|SaleSpares', $n);
	}

	public static function representingColumn() {
		return 'date';
	}

	public function rules() {
		return array(
			array('paid, date, customer_id, info_spares_id, branch_id, sale_status_id, user_id, price_buy, qautity', 'required'),
			array('paid, customer_id, info_spares_id, branch_id, sale_status_id, discount, user_id, price_buy, qautity', 'numerical', 'integerOnly'=>true),
			array('discount', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, paid, date, customer_id, info_spares_id, branch_id, sale_status_id, discount, user_id, price_buy, qautity', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'customer' => array(self::BELONGS_TO, 'Customer', 'customer_id'),
			'branch' => array(self::BELONGS_TO, 'Branch', 'branch_id'),
			'infoSpares' => array(self::BELONGS_TO, 'InfoSpares', 'info_spares_id'),
			'saleStatus' => array(self::BELONGS_TO, 'SaleStatus', 'sale_status_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'paid' => Yii::t('app', 'Paid'),
			'date' => Yii::t('app', 'Date'),
			'customer_id' => null,
			'info_spares_id' => null,
			'branch_id' => null,
			'sale_status_id' => null,
			'discount' => Yii::t('app', 'Discount'),
			'user_id' => null,
			'price_buy' => Yii::t('app', 'Price Buy'),
			'qautity' => Yii::t('app', 'Qautity'),
			'customer' => null,
			'branch' => null,
			'infoSpares' => null,
			'saleStatus' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('paid', $this->paid);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('customer_id', $this->customer_id);
		$criteria->compare('info_spares_id', $this->info_spares_id);
		$criteria->compare('branch_id', $this->branch_id);
		$criteria->compare('sale_status_id', $this->sale_status_id);
		$criteria->compare('discount', $this->discount);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('price_buy', $this->price_buy);
		$criteria->compare('qautity', $this->qautity);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}