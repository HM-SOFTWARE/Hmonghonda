<?php

/**
 * This is the model base class for the table "last_old_spares".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "LastOldSpares".
 *
 * Columns in table "last_old_spares" available as properties of the model,
 * followed by relations of table "last_old_spares" available as properties of the model.
 *
 * @property integer $id
 * @property integer $last_qautity
 * @property integer $old_qautity
 * @property integer $info_spares_id
 * @property string $number_come_old
 *
 * @property InfoSpares $infoSpares
 */
abstract class BaseLastOldSpares extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'last_old_spares';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'LastOldSpares|LastOldSpares', $n);
	}

	public static function representingColumn() {
		return 'number_come_old';
	}

	public function rules() {
		return array(
			array('info_spares_id', 'required'),
			array('last_qautity, old_qautity, info_spares_id', 'numerical', 'integerOnly'=>true),
			array('number_come_old', 'length', 'max'=>45),
			array('last_qautity, old_qautity, number_come_old', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, last_qautity, old_qautity, info_spares_id, number_come_old', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'infoSpares' => array(self::BELONGS_TO, 'InfoSpares', 'info_spares_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'last_qautity' => Yii::t('app', 'Last Qautity'),
			'old_qautity' => Yii::t('app', 'Old Qautity'),
			'info_spares_id' => null,
			'number_come_old' => Yii::t('app', 'Number Come Old'),
			'infoSpares' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('last_qautity', $this->last_qautity);
		$criteria->compare('old_qautity', $this->old_qautity);
		$criteria->compare('info_spares_id', $this->info_spares_id);
		$criteria->compare('number_come_old', $this->number_come_old, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}